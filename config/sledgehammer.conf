general {
    # For debugging purposes
    debug=false
    message {
        # Sent when a chunk fails to save.
        chunk-save="&fChunk ([X], [Z]) &cfailed to save"
        # Sent to the player when a thrown item gets deleted.
        item-teleport="&f[ID] &cwas lost in time and space"
        # Sent to the player when attempting to move outside the world border.
        move-outside-border="&cCannot move outside of the world border"
        # Sent to the player when attempting exploit ProjectRed.
        project-red-exploit="&cInvalid Item: &f[ID]"
        # Sent to the player when attempting exploit Storage Network.
        storage-network-exploit="&cInvalid Item: &f[ID]"
    }
    # False: Mod will not be loaded.
    # True: Mod will be added to the classloader.
    mod {}
}
integration {
    # If 'true', prevents Botania from creating islands
    botania=false
    # If 'true', forces permission check for OP based commands
    forge=false
    # If 'true', fixes Misty World portal issues
    mist=false
    # If 'true', fixes https://github.com/An-Sar/PrimalCore/issues/210 (Fixed in 0.6.56 according to Dev)
    primal=false
    # If 'true', prevents movement outside of the world border
    sponge-border=false
    # If 'true', prevents sending blank death messages
    sponge-death=false
}
mixin {
    # Actually Additions
    actually-additions {
        # If 'true', prevents the AtomicReconstructor from using the Disruption Lens.
        disruption-lens=false
    }
    # Better Survival
    better-survival {
        # If 'true', silences a debug message in the ModWeaponHandler.
        debug-messages=false
    }
    # Carry On
    carry-on {
        # If 'true', fixes a ConcurrentModificationException caused by the onWorldTick method.
        concurrent-modification-exception=true
    }
    # Minecraft
    core {
        # If 'true', advancements will not be reloaded on world load.
        advancement-reload=false
        # If 'true', prints a single message instead of a stacktrace for advancement errors.
        advancement-stacktrace=true
        # If 'true', fixes NullPointerException in BiomeProvider::findBiomePosition.
        biome-provider=true
        # If 'true', prevents Grass turning into Dirt.
        block-grass=false
        # If 'true', prevents Ice turning into Water.
        block-ice=false
        # If 'true', alert players with permission (sledgehammer.broadcast.chunksave) when a chunk fails to save.
        chunk-save-alert=true
        # Items to remove from chunks.
        chunk-save-blacklist=[
            "minecraft:writable_book",
            "minecraft:written_book"
        ]
        # If 'true', removes all Entities and TileEntities from chunks that fail to save.
        chunk-save-purge-all=false
        # If 'true', removes all blacklisted items from chunks that fail to save.
        chunk-save-purge-blacklist=true
        # If 'true', generates a crash report and safely stops the server if a chunk fails to save.
        chunk-save-shutdown=false
        # If 'true', adds TileEntity data to the crash report from calls to 'getUpdateTag' that fail.
        get-update-tag-crash=false
        # If 'true', prevents crash due to invalid translation keys.
        invalid-translation=true
        # If 'true', fixes MC-134716 - Player kick exploit.
        itemstack-exploit=false
        # If 'true', makes LazyLoad Thread-safe (Should fix MC-68381).
        lazyload-thread-safe=false
        # If 'true', enforces limits for books to 50 pages with 255 characters for each.
        limit-books=false
        # If 'true', fixes potential deadlock on shutdown.
        network-system=true
        # If 'true', prevents ConcurrentModificationException in PlayerChunkMap.
        player-chunk-map=true
        # If 'true', increases the maximum length for a WorldType name in SPacketJoinGame packet.
        world-type-length=false
    }
    # Forge
    forge {
        # If 'true', reduces network usage by postponing flush.
        flush-network-on-tick=true
        # If 'true', disables SearchTree reloading (Speeds up server connection process).
        nuke-search-tree=true
        # If 'true', cancels packets sent by LootBags due to poorly written networking.
        packet-spam=true
    }
    # Immersive Engineering
    immersive-engineering {
        # If 'true', fixes https://github.com/BluSunrize/ImmersiveEngineering/issues/3474.
        workbench-render=false
    }
    # Matter Overdrive
    matter-overdrive {
        # If 'true', fixes IllegalArgumentException caused by the canConnectFromSide method.
        can-connect-from-side=false
    }
    # Morph
    morph {
        # If 'true', fixes NullPointerException caused by onUpdate
        entity-update=false
    }
    # No Tree Punching
    no-tree-punching {
        # If 'true', fixes NullPointerException in ModEventHandler::harvestBlock
        harvest-block=false
    }
    # p455w0rd's Library
    p455w0rdslib {
        # If 'true', disables onMapGen, onChunkLoad and onBlockGen events which cause client stuttering
        events=false
    }
    # Primitive Mobs
    primitive-mobs {
        # If 'true', fixes NullPointerException caused by MessagePrimitiveJumping
        networking=true
        # If 'true', fixes https://github.com/Daveyx0/PrimitiveMobs/issues/59 (Sponge only).
        traveling-merchant=false
    }
    # Project Red
    project-red {
        # If 'true', fixes item spawn packet exploit.
        packet-exploit=false
    }
    # Pyrotech
    pyrotech {
        # If 'true', fixes item handling in TileActivePile which is incompatible with Sponge
        tile-active-pile-sponge=false
    }
    # Quark
    quark {
        # If 'true', disables Improved Sleeping Module.
        improved-sleeping=true
    }
    # Reliquary
    reliquary {
        # If 'true', fixes https://github.com/P3pp3rF1y/Reliquary/issues/370.
        item-rending-gale=false
    }
    # Ruins (Structure Spawning System)
    ruins {
        # If 'true', disables ruins debugging messages.
        message-spam=false
    }
    # SpongeForge / SpongeVanilla
    sponge {
        # If 'true', catches an IllegalStateException thrown by Sponge.
        advancement-initialized=false
        # If 'true', fixes ClassCastException in WrapperCommandSource.
        command-source=false
        # If 'true', fixes https://github.com/SpongePowered/SpongeCommon/issues/2013.
        interact-events=false
        # If 'true', disables inventory debugging messages.
        inventory-debug=false
        # If 'true', prevents or deletes any items that attempt to teleport across dimensions.
        item-teleport=false
        # Don't prevent these items from teleporting.
        item-teleport-whitelist=[
            "draconicevolution:ender_energy_manipulator"
        ]
        # If 'true', prevents StackOverflow on writeToNBT.
        tile-entity-stack-overflow=false
    }
    # Storage Network
    storage-network {
        # If 'true', fixes item spawn packet exploit.
        packet-exploit=false
    }
    # Tomb Many Graves
    tomb-many-graves {
        # If 'true', disables TombManyGraves functionality.
        functionality=false
    }
    # Topography
    topography {
        # If 'true', disables onDimensionChange event.
        dimension-change=false
    }
    # Totemic
    totemic {
        # If 'true', prevents the Rain Dance Ceremony from changing the weather.
        rain-dance-ceremony=false
    }
    # Vaultopic - Early Inventory Management
    vaultopic {
        # If 'true', fixes NullPointerException in Projector::loadMatrixes.
        load-matrixes=false
    }
    # Hearth Well
    wolforce {
        # If 'true', fixes inventory handling in BlockGraftingTray which is incompatible with Sponge
        block-grafting-tray-sponge=false
    }
}
